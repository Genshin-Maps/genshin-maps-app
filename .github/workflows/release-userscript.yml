name: Build/Release Addons

on:
    push:
        tags:
            - "addons/v*"
            - "auto-track/v*"

jobs:
    release:
        name: Build And Release
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [18]
        runs-on: ${{ matrix.os }}
        permissions:
            contents: write

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v3

            - name: Determine type
              id: determine_type
              shell: bash
              run: |
                  TAG=${GITHUB_REF#refs/tags/}
                  if [[ $TAG == addons* ]]; then
                    echo "::set-output name=type::addons"
                  elif [[ $TAG == auto-track* ]]; then
                    echo "::set-output name=type::auto-track"
                  else
                    echo "Invalid tag prefix"
                    exit 1
                  fi

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build project
              run: pnpm run vite:${{ steps.determine_type.outputs.type }}

            - name: Upload dist files
              uses: actions/upload-artifact@v3
              with:
                  name: production-files
                  path: ./out/renderer

            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  draft: true
                  files: |
                      out/renderer/*.js
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    deploy:
        name: Deploy
        needs: release
        permissions:
            contents: write
        runs-on: ubuntu-latest

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: production-files
                  path: ./out/renderer

            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./out/renderer
                  destination_dir: userscript
